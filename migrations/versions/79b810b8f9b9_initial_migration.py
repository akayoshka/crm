"""Initial migration

Revision ID: 79b810b8f9b9
Revises: 
Create Date: 2025-04-18 03:05:14.286283

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '79b810b8f9b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('legal_name', sa.String(length=256), nullable=False),
    sa.Column('tax_id', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('website', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_tax_id'), ['tax_id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('profile_image', sa.String(length=256), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'COMPANY_OWNER', 'MANAGER', 'OPERATOR', 'DRIVER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admin_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.Enum('LOGIN', 'LOGOUT', 'CREATE', 'UPDATE', 'DELETE', 'VIEW', 'DOWNLOAD', 'UPLOAD', 'ASSIGN', name='actiontype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=256), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_logs_action_type'), ['action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_logs_user_id'), ['user_id'], unique=False)

    op.create_table('managers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('statistics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_statistics_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_statistics_period_end'), ['period_end'], unique=False)
        batch_op.create_index(batch_op.f('ix_statistics_period_start'), ['period_start'], unique=False)
        batch_op.create_index(batch_op.f('ix_statistics_user_id'), ['user_id'], unique=False)

    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'ON_HOLD', 'COMPLETED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tasks_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_deadline'), ['deadline'], unique=False)
        batch_op.create_index(batch_op.f('ix_tasks_status'), ['status'], unique=False)

    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('file_path', sa.String(length=256), nullable=False),
    sa.Column('file_type', sa.String(length=64), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_documents_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_documents_task_id'), ['task_id'], unique=False)

    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_recipient_id'), ['recipient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sender_id'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sent_at'), ['sent_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_task_id'), ['task_id'], unique=False)

    op.create_table('operators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['managers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operator_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('license_number', sa.String(length=64), nullable=False),
    sa.Column('vehicle_info', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['operator_id'], ['operators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_point', sa.String(length=256), nullable=False),
    sa.Column('end_point', sa.String(length=256), nullable=False),
    sa.Column('waypoints', sa.JSON(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('estimated_time', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PLANNED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='routestatus'), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id')
    )
    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_routes_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_routes_driver_id'), ['driver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_routes_start_time'), ['start_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_routes_status'), ['status'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('routes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_routes_status'))
        batch_op.drop_index(batch_op.f('ix_routes_start_time'))
        batch_op.drop_index(batch_op.f('ix_routes_driver_id'))
        batch_op.drop_index(batch_op.f('ix_routes_company_id'))

    op.drop_table('routes')
    op.drop_table('drivers')
    op.drop_table('operators')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_task_id'))
        batch_op.drop_index(batch_op.f('ix_messages_sent_at'))
        batch_op.drop_index(batch_op.f('ix_messages_sender_id'))
        batch_op.drop_index(batch_op.f('ix_messages_recipient_id'))
        batch_op.drop_index(batch_op.f('ix_messages_is_read'))
        batch_op.drop_index(batch_op.f('ix_messages_company_id'))

    op.drop_table('messages')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_task_id'))
        batch_op.drop_index(batch_op.f('ix_documents_company_id'))

    op.drop_table('documents')
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tasks_status'))
        batch_op.drop_index(batch_op.f('ix_tasks_deadline'))
        batch_op.drop_index(batch_op.f('ix_tasks_company_id'))

    op.drop_table('tasks')
    with op.batch_alter_table('statistics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_statistics_user_id'))
        batch_op.drop_index(batch_op.f('ix_statistics_period_start'))
        batch_op.drop_index(batch_op.f('ix_statistics_period_end'))
        batch_op.drop_index(batch_op.f('ix_statistics_company_id'))

    op.drop_table('statistics')
    op.drop_table('managers')
    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_logs_company_id'))
        batch_op.drop_index(batch_op.f('ix_logs_action_type'))

    op.drop_table('logs')
    op.drop_table('company_owners')
    op.drop_table('admins')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_tax_id'))
        batch_op.drop_index(batch_op.f('ix_companies_name'))
        batch_op.drop_index(batch_op.f('ix_companies_email'))

    op.drop_table('companies')
    # ### end Alembic commands ###
